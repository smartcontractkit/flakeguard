name: Build, Lint, and Test
on:
    push:
        branches:
          - main
        tags:
          - '*'
    pull_request:
        branches:
          - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --clean --snapshot --single-target
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload covered binary for integration tests
        uses: actions/upload-artifact@v4
        with:
          name: flakeguard_covered
          path: dist/covered_linux_amd64_v1/flakeguard_covered
          retention-days: 1
          if-no-files-found: error # Need this to run integration tests properly

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest

  test-unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Run Unit Tests
        run: go tool gotestsum -- -coverprofile=unit_coverage.txt -skip TestIntegration ./...
      - name: Upload unit coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit
          name: unit-tests
          file: unit_coverage.txt
          fail_ci_if_error: false

  test-unit-race:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Run Unit Tests with Race
        run: go tool gotestsum -- -race -skip TestIntegration ./...

  test-integration:
    env:
      FLAKEGUARD_GOCOVERDIR: ./coverage/integration
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: flakeguard_covered
          path: ./flakeguard_covered
      - name: Make binary executable
        run: chmod +x $(pwd)/flakeguard_covered
      - name: Add binary to PATH
        run: echo "$(pwd)/flakeguard_covered" >> $GITHUB_PATH
      - name: Create coverage directory
        run: mkdir -p $(pwd)/coverage/integration
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Run Integration Tests
        run: go tool gotestsum -- -run TestIntegration ./...
      - name: Format coverage report
        run: go tool covdata textfmt -i=./coverage/integration -o=integration_coverage.txt
      - name: Upload integration coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: integration
          name: integration-tests
          file: integration_coverage.txt
          fail_ci_if_error: false

  test-integration-race:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: flakeguard_covered
          path: ./flakeguard_covered
      - name: Make binary executable
        run: chmod +x ./flakeguard_covered
      - name: Add binary to PATH
        run: echo "$(pwd)/flakeguard_covered" >> $GITHUB_PATH
      - name: Run Integration Tests with Race
        env:
          FLAKEGUARD_GOCOVERDIR: coverage/integration
        run: go tool gotestsum -- -run TestIntegration -race ./...
